/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Daria Danyliuk (https://sketchfab.com/DariaDanyliuk)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/butterflies-764b7378c21b47039b40eca9309eb3ab
Title: Butterflies
*/

import { useRef, useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

import butterflies from "../components/assets/3d/butterflies.glb";

const Butterflies = (props) => {
  const ref = useRef();
  const { scene, animations } = useGLTF(butterflies);
  const { actions } = useAnimations(animations, ref);

  useEffect(() => {
    console.log("actions", actions);
    actions["Take 001"].play();
    return () => {
      actions["Take 001"].stop();
    };
  }, [actions]);

  useFrame(({ clock }) => {
    const time = clock.getElapsedTime() / 2;

    // Define the flight path here, for example a circular path
    const x = Math.sin(time) * 0.2;
    const y = 2;
    const z = Math.sin(time) * Math.cos(time);

    // Update position
    ref.current.position.set(x, y, z);

    // Update rotation to face the direction of movement
    // Assuming the butterfly faces along the positive Y-axis by default
    ref.current.rotation.y = Math.atan2(x, y);
  });

  return (
    <mesh
      {...props}
      position={[1, 1, 1]}
      scale={[0.001, 0.001, 0.001]}
      ref={ref}
    >
      <primitive object={scene} />
    </mesh>
  );
};

export default Butterflies;
